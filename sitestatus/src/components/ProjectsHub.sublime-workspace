{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"index",
				"index_engine"
			],
			[
				"conta",
				"containsKey"
			],
			[
				"docle",
				"docLengthFilePath"
			],
			[
				"total",
				"totalPerDoc"
			],
			[
				"res",
				"resultsPath"
			],
			[
				"Buffer",
				"BufferedReader"
			],
			[
				"oup",
				"outputWrite"
			],
			[
				"top",
				"topicId"
			],
			[
				"tota",
				"totalRelevant"
			],
			[
				"runnin",
				"runningPrecision"
			],
			[
				"ex",
				"Exception"
			],
			[
				"nd",
				"nDCGatThousand"
			],
			[
				"pre",
				"precisionTenAnswer"
			],
			[
				"av",
				"averagePrecision"
			],
			[
				"relevan",
				"relevantCounter"
			],
			[
				"b",
				"bw"
			],
			[
				"fil",
				"fileHeader"
			],
			[
				"cont",
				"containsKey"
			],
			[
				"valid",
				"validFormat"
			],
			[
				"num",
				"NumberFormatException"
			],
			[
				"all",
				"allResults"
			],
			[
				"resul",
				"resultsPath"
			],
			[
				"tk",
				"tkValues"
			],
			[
				"running",
				"runningSum"
			],
			[
				"pcon",
				"pCOneROne"
			],
			[
				"binary",
				"binaryTracker"
			],
			[
				"time",
				"timeBiased"
			],
			[
				"each",
				"eachEntry"
			],
			[
				"text",
				"textContent"
			],
			[
				"calcula",
				"calculateIDCG"
			],
			[
				"id",
				"idcgTotal"
			],
			[
				"coun",
				"countUntil"
			],
			[
				"rel",
				"relevantCounter"
			],
			[
				"precision",
				"precisionAtTen"
			],
			[
				"user",
				"userDocs"
			],
			[
				"tp",
				"topicJudgement"
			],
			[
				"integer",
				"Integer"
			],
			[
				"key",
				"keySet"
			],
			[
				"doc",
				"docsPerTopic"
			],
			[
				"re",
				"relevantCount"
			],
			[
				"relevant",
				"relevantCount"
			],
			[
				"topic",
				"topicJudgement"
			],
			[
				"results",
				"resultsDict"
			],
			[
				"curr",
				"currDoc"
			],
			[
				"line",
				"lineArray"
			],
			[
				"qrel",
				"qrelsPath"
			],
			[
				"pare",
				"parseInt"
			],
			[
				"List",
				"ListItem"
			],
			[
				"list",
				"ListHeader"
			],
			[
				"contra",
				"contractorObject"
			],
			[
				"expecte",
				"expectedContractorIds"
			],
			[
				"cu",
				"curContractorName"
			],
			[
				"find",
				"findContractorByKey"
			],
			[
				"expec",
				"expectedContractors"
			],
			[
				"expe",
				"expectedContractorNames"
			],
			[
				"ALL",
				"allContractorsCopy"
			],
			[
				"expected",
				"expectedContractorNames"
			],
			[
				"single",
				"singleContractorKey"
			],
			[
				"creat",
				"creatingNewContractor"
			],
			[
				"crea",
				"creatingNewContractor"
			],
			[
				"create",
				"createContractorObject"
			],
			[
				"phon",
				"phoneNum"
			],
			[
				"pro",
				"project"
			],
			[
				"inp",
				"inputItemStyle"
			],
			[
				"li",
				"ListItem"
			],
			[
				"div",
				"div"
			],
			[
				"err",
				"errorMessageTextStyle"
			],
			[
				"no",
				"nodivider"
			],
			[
				"input",
				"Input"
			],
			[
				"hand",
				"handleQuestionTimeChange"
			],
			[
				"quest",
				"questionTime"
			],
			[
				"qu",
				"questionTime"
			],
			[
				"note",
				"noteBoxInside"
			],
			[
				"notebox",
				"noteBoxInside"
			],
			[
				"not",
				"noteBox"
			],
			[
				"email",
				"emailAddress"
			],
			[
				"last",
				"lastName"
			],
			[
				"inner",
				"innerMap"
			],
			[
				"row",
				"rowTokens"
			],
			[
				"parse",
				"parseInt"
			],
			[
				"has",
				"hasMoreTokens"
			],
			[
				"cur",
				"curToken"
			],
			[
				"inne",
				"innerMap"
			],
			[
				"plt",
				"plTokens"
			],
			[
				"ha",
				"hasMoreTokens"
			],
			[
				"to",
				"tokenizer"
			],
			[
				"plto",
				"plToDict"
			],
			[
				"par",
				"parseInt"
			],
			[
				"spli",
				"splitInner"
			],
			[
				"strin",
				"String"
			],
			[
				"pl",
				"plArray"
			],
			[
				"tti",
				"ttiDic"
			],
			[
				"itt",
				"ittDic"
			],
			[
				"String",
				"StringTokenizer"
			],
			[
				"Hash",
				"HashMap"
			],
			[
				"term",
				"termToInt"
			],
			[
				"sy",
				"System"
			],
			[
				"DOC",
				"DOCLENGTH"
			],
			[
				"grap",
				"graphicCount"
			],
			[
				"out",
				"outLex"
			],
			[
				"get",
				"getName"
			],
			[
				"po",
				"postingList"
			],
			[
				"int",
				"intToTerm"
			],
			[
				"indi",
				"intId"
			],
			[
				"ter",
				"termToInt"
			],
			[
				"count",
				"countWord"
			],
			[
				"hash",
				"HashMap"
			],
			[
				"next",
				"nextToken"
			],
			[
				"tes",
				"textString"
			],
			[
				"docume",
				"Document"
			],
			[
				"document",
				"DocumentBuilder"
			],
			[
				"new",
				"newDocumentBuilder"
			],
			[
				"Docum",
				"DocumentBuilderFactory"
			],
			[
				"xml",
				"xmlList"
			],
			[
				"dname",
				"dnameb"
			],
			[
				"B",
				"BufferedReader"
			],
			[
				"node",
				"NodeList"
			],
			[
				"Builder",
				"DocumentBuilderFactory"
			],
			[
				"pr",
				"println"
			],
			[
				"in",
				"InputStreamReader"
			],
			[
				"filen",
				"FileInputStream"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "package",
		"selected_items":
		[
			[
				"package",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/KevinLo/Desktop/MSCI541/Homework4/porterStemmer.java",
		"/Users/KevinLo/Desktop/MSCI541/MSCI541H1P1/HW2SourceCode/index_engine.java",
		"/Users/KevinLo/Desktop/MSCI541/Homework3/lookupEngine.java",
		"/Users/KevinLo/Desktop/hw3-files/results-files/student8.results",
		"/Users/KevinLo/Desktop/FYDP/sitestatus-mobile/sitestatus/src/components/SingleProjectStatusUpdatesListRow.jsx",
		"/Users/KevinLo/Desktop/FYDP/sitestatus-mobile/sitestatus/src/components/SingleProjectHome.jsx",
		"/Users/KevinLo/Desktop/FYDP/sitestatus-mobile/sitestatus/src/components/NewProject.jsx",
		"/Users/KevinLo/Desktop/FYDP/sitestatus-mobile/sitestatus/src/components/NewContractor.jsx",
		"/Users/KevinLo/Desktop/FYDP/sitestatus-mobile/sitestatus/src/components/ContractorsListRow.jsx",
		"/Users/KevinLo/Desktop/FYDP/sitestatus-mobile/sitestatus/src/components/SingleProjectStatusUpdateList.jsx",
		"/Users/KevinLo/Desktop/FYDP/sitestatus-mobile/sitestatus/src/components/SignUp.jsx",
		"/Users/KevinLo/Desktop/FYDP/sitestatus-mobile/sitestatus/src/components/ProjectsHub.jsx",
		"/Users/KevinLo/Desktop/FYDP/sitestatus-mobile/sitestatus/src/components/ContractorsHub.jsx",
		"/Users/KevinLo/Desktop/FYDP/sitestatus-mobile/sitestatus/src/models/project.jsx",
		"/Users/KevinLo/Desktop/FYDP/sitestatus-mobile/sitestatus/src/models/contractor.jsx",
		"/Users/KevinLo/Desktop/FYDP/sitestatus-mobile/sitestatus/src/components/SingleProjectSingleStatusUpdate.jsx",
		"/Users/KevinLo/Desktop/FYDP/sitestatus-mobile/sitestatus/src/components/ProjectsListRow.jsx",
		"/Users/KevinLo/Desktop/FYDP/sitestatus-mobile/sitestatus/src/public/index.html.ejs",
		"/Users/KevinLo/Desktop/MSCI541/MSCI541H1P1/index_engine.java",
		"/Users/KevinLo/Desktop/MSCI541/MSCI541H1P1/boolean_and.java",
		"/Users/KevinLo/Desktop/MSCI541/MSCI541H1P1/IndexEngine.java",
		"/Users/KevinLo/Desktop/IndexEngine.java",
		"/Users/KevinLo/Desktop/FYDP/sitestatus-mobile/sitestatus/src/components/Login.jsx",
		"/Users/KevinLo/Desktop/FYDP/sitestatus-mobile/sitestatus/src/components/NewProjects.jsx",
		"/Users/KevinLo/Desktop/MSCI541H1P1.java"
	],
	"find":
	{
		"height": 25.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"dbf",
			"filename",
			"pldic",
			"queries",
			"resultarray",
			"resultarr",
			"getwordc",
			" stemmer",
			"stemming",
			"stemmingEngine",
			"stemmer",
			"lookup",
			"println",
			"print",
			"userdocs",
			"binarytracker",
			"judgement",
			"relevantcounter",
			"relevant",
			"releveantcounter",
			"catch",
			"resultsdict",
			"print",
			"COUNTER",
			"userdocs",
			" map",
			"map",
			"userdocs",
			"resultspath",
			"results",
			"res",
			"e",
			"print",
			"binary",
			"testfolder",
			"println",
			"get",
			"put",
			"float",
			"opentime",
			"handle",
			"renderpage",
			"renderlist",
			"singleprojectstatusupdate",
			"listofupdates",
			"scheduled",
			"firebase",
			"scheduledcontractors",
			"utils",
			"util",
			"singleprojectstatusupdate",
			"today",
			"find",
			"renderlist",
			"listrow",
			"singleprojectst",
			"singleproject",
			"single",
			"creating",
			"key",
			"creating",
			"single",
			"key",
			"getinitial",
			"creatingnew",
			"activecontractorkey",
			"key",
			"active",
			"creating",
			"active",
			"key",
			"active",
			"creating",
			"key",
			"singleprojectkey",
			"singleproject",
			"pop",
			"push",
			"delete",
			"isvalid",
			"creatingnewcontractor",
			"delete",
			"createnew",
			"changingcon",
			"creatingnew",
			"delete",
			"prepareput",
			"isvalid",
			"createnewor",
			"delete",
			"contractorsli",
			"listofcontra",
			"console",
			"handleproject",
			"status",
			"updates",
			"project",
			"props",
			"updates",
			"submit",
			"isvalidquestiontime",
			"questiontime",
			"moment",
			"padding",
			"center",
			"\t\t\t\t\t\t\t\n",
			"br",
			"token",
			"length",
			"element",
			"nodelist",
			"innermap",
			"countword",
			"errormessages"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "ProjectsHub.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Desktop/MSCI541/MSCI541H1P1/index_engine.java"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 227.0,
	"status_bar_visible": false,
	"template_settings":
	{
	}
}
